---
// import ContactForm from './Contact'
---
<section class="bg-yellow" id="a04">
  <div class="container">
      <div class="contact">
      <h1>Contact</h1>
      <form class="form-box" id="form">
          <div class="form-item">
          <input
              placeholder="Name"
              id="name"
          />
          <input
              placeholder="Email"
              id="email"
          />
          <textarea
              placeholder="Message"
              id="message"
          />
          <button type="submit">Submit</button>
          </div>
      </form>
      <p class="reCAPTCHA">This site is protected by reCAPTCHA and the Google<br />
<a href="https://policies.google.com/privacy">Privacy Policy</a> and
<a href="https://policies.google.com/terms">Terms of Service</a> apply.</p>
      <div class="contact-logo">
          ASTRO BASE
          </div>
      </div>
  </div>
</section>
<script
  is:inline
  src="https://www.google.com/recaptcha/api.js?render=6LdVjIEoAAAAAEp-0ct8BKhItURM3jjT8mG5iGS2&hl=ja"
></script>
<script>
    const form = document.getElementById('form')
    form?.addEventListener('submit', submitFormData)
  
    function submitFormData(event: Event) {
      event.preventDefault()
      grecaptcha.ready(() => {
        grecaptcha
          .execute('6LdVjIEoAAAAAEp-0ct8BKhItURM3jjT8mG5iGS2', { action: 'submit' })
          .then(async (token) => {
            const target = event.target as typeof event.target & {
              name: { value: string }
              email: { value: string }
              message: { value: string }
            }
  
            const data = {
              name: target.name.value,
              email: target.email.value,
              message: target.message.value,
              googleReCaptchaToken: token,
            }
  
            const formData = new FormData()
            Object.entries(data).forEach(([key, value]) => {
              formData.append(key, value)
            })
  
            try {
              const response = await sendRequest(formData)
              if (response.ok) {
                location.href = '/thanks'
              } else {
                location.href = '/error'
              }
            } catch (err) {
              location.href = '/error'
            }
          })
      })
    }
  
    async function sendRequest(formData: FormData) {
      return await fetch('https://shim.form.newt.so/v1/deCA6xMnK', {
        method: 'POST',
        body: formData,
        headers: {
          Accept: 'application/json',
        },
      })
    }
  </script>